{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair13/Desktop/Programming practice/ReactJS_Project/movie_app_2020/src/App.js\";\nimport React from 'react'; //import PropTypes from 'prop-types';\n\nimport axios from 'axios';\nimport Movie from './Movie';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movie: []\n    };\n\n    this.getMovies = async () => {\n      const _ref = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"),\n            movies = _ref.data.data.movies;\n\n      this.setState({\n        movies,\n        isLoading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          movies = _this$state.movies;\n    return React.createElement(\"section\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, isLoading ? React.createElement(\"div\", {\n      class: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"loader__text \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Loading...\")) : React.createElement(\"div\", {\n      class: \"movies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, movies.map(movie => React.createElement(Movie, {\n      key: movie.id,\n      id: movie.id,\n      year: movie.year,\n      title: movie.title,\n      summary: movie.summary,\n      poster: movie.medium_cover_image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macbookair13/Desktop/Programming practice/ReactJS_Project/movie_app_2020/src/App.js"],"names":["React","axios","Movie","App","Component","state","isLoading","movie","getMovies","get","movies","data","setState","componentDidMount","render","map","id","year","title","summary","medium_cover_image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,KAAK,EAAE;AAFD,KADwB;;AAAA,SAMhCC,SANgC,GAMpB,YAAY;AAAA,mBACW,MAAMP,KAAK,CAACQ,GAAN,CACrC,0DADqC,CADjB;AAAA,YACDC,MADC,QACfC,IADe,CACRA,IADQ,CACDD,MADC;;AAItB,WAAKE,QAAL,CAAc;AACZF,QAAAA,MADY;AAEZJ,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KAd+B;AAAA;;AAgBhCO,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,SAAL;AACD;;AAEDM,EAAAA,MAAM,GAAG;AAAA,wBACqB,KAAKT,KAD1B;AAAA,UACAC,SADA,eACAA,SADA;AAAA,UACWI,MADX,eACWA,MADX;AAEP,WACE;AAAS,MAAA,KAAK,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,SAAS,GACP;AAAK,MAAA,KAAK,EAAG,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,KAAK,EAAG,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,CADO,GAKN;AAAK,MAAA,KAAK,EAAG,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEII,MAAM,CAACK,GAAP,CAAWR,KAAK,IACd,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACS,EADb;AAEE,MAAA,EAAE,EAAET,KAAK,CAACS,EAFZ;AAGE,MAAA,IAAI,EAAET,KAAK,CAACU,IAHd;AAIE,MAAA,KAAK,EAAEV,KAAK,CAACW,KAJf;AAKE,MAAA,OAAO,EAAEX,KAAK,CAACY,OALjB;AAME,MAAA,MAAM,EAAEZ,KAAK,CAACa,kBANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,CANN,CADF;AAyBD;;AA/C+B;;AAkDlC,eAAejB,GAAf","sourcesContent":["import React from 'react';\n//import PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Movie from './Movie';\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movie: []\n  };\n\n  getMovies = async () => {\n    const {data: {data: {movies}}} = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n      );\n    this.setState({\n      movies, \n      isLoading: false\n    });\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {isLoading, movies} = this.state;\n    return (\n      <section class = \"container\">\n        {isLoading \n        ? (<div class = \"loader\">\n            <span class = \"loader__text \">Loading...</span>\n          </div>)\n        : (\n            <div class = \"movies\">\n              {\n                movies.map(movie => (\n                  <Movie \n                    key={movie.id}\n                    id={movie.id} \n                    year={movie.year} \n                    title={movie.title} \n                    summary={movie.summary} \n                    poster={movie.medium_cover_image}\n                    />\n                   ))\n              }\n            </div>\n          )\n        }\n      </section>\n    )\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}